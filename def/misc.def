/***********************************************************************

 miscellaneous

***********************************************************************/

entityDef worldspawn {
	"editor_color"			"0 0 0"
	"editor_mins"			"?"
	"editor_maxs"			"?"

	"editor_usage"			"Every map should have exactly one worldspawn."
	"editor_var music"		"music wav file."
	"editor_var gravity"	"gravity value for the level."
 	"editor_var no_Weapons" "only fists and no melee attacks"

// RAVEN BEGIN
// AReis: The ambient light color value.
	"editor_var ambientColor"	"The ambient base color applied to the map."
// RAVEN END

	"spawnclass"			"idWorldspawn"
	"gravity"				"1066"
	"name"					"world"
}

entityDef worldspawn_mp {
	"inherit"				"worldspawn"
	"editor_ignore"			"1"
	"gravity"				"800"
}

entityDef light {
	"editor_color"				"0 1 0"
	"editor_mins"				"-8 -8 -8"
	"editor_maxs"				"8 8 8"
	"editor_rotatable"			"1"

	"editor_usage"				"Light source.  If health is set, light becomes breakable and turns off when shot."
	
	"editor_material texture"		"light shader to use."
	"editor_color color"			"light color"
	"editor_var shaderParm3"	"shaderParm 3"
	"editor_var shaderParm4"	"shaderParm 4"
	"editor_var shaderParm5"	"shaderParm 5"
	"editor_var shaderParm6"	"shaderParm 6"
	"editor_var shaderParm7"	"shaderParm 7"
	"editor_var count"			"how many times light must be triggered to toggle."
	"editor_var break"			"break when triggered."
	"editor_model model"			"model to use."
	"editor_model broken"			"model to use when the light is broken (defaults to model name with '_broken' appended to name)"
	"editor_var hideModelOnBreak" "hides the model when broken"
	"editor_var health"			"amount of damage to recieve before becoming broken.  0 is nonbreakable."
	"editor_var target"			"entities to trigger if shot."
	"editor_var levels"			"the number of times a light must be triggered until it turns off.  Each time it's triggered, it's dimmed to a lower level."
	"editor_var start_off"		"causes the light to be off when the level starts."
	"editor_var snd_broken"		"sound shader to use when broken"
	"editor_var mtr_broken"		"material to use when broken"
	"editor_color color_demonic"	"demonic color to use if in demonic mode."
	"editor_material mat_demonic"	"demonic shader to use if in demonic mode."
	"editor_var leave_demonic_mat" "leaves the demonic shader when the effect expires.. color is still reverted back."

// RAVEN BEGIN
// bdube: added
	"editor_var light_gui"		"set this to the entity name that contains the gui that should control the light's color and intensity"
// abahr:
	"editor_var wait"			"when set > 0, seconds between triggerings.  time between lights is wait + or - random"
	"editor_var random"			"wait variance."
	
// AReis: Minor light optimization.
	"editor_var globalLight"	"Whether this light is global and should always be drawn."
	
// dluetscher: added support for light detail levels
	"editor_var detailLevel"	"Sets this to a level-of-detail value where this light is drawn only when >= r_lightDetailLevel"
// RAVEN END

	"spawnclass"				"idLight"
	"health"					"0"
	"levels"					"1"
	"start_off"					"0"
	"count"						"1"
	"break"						"0"
}

entityDef speaker {
	"editor_color"					"0 1 0"
	//"editor_color"				".5 .5 .5"
	"editor_mins"					"-8 -8 -8"
	"editor_maxs"					"8 8 8"
	"editor_material"				"textures/common/speaker"
	//"editor_material"			"textures/common/trigonce"
	

	"editor_usage"					""
	
	"editor_snd s_shader"			"the sound shader or wavefile."
	"editor_snd snd_demonic"		"demonic sound shader."
	"editor_var overlayDemonic"		"set to 1 overlays the demonic sound instead of replacing it."
	"editor_var s_waitfortrigger"	"play on load or play when triggered."
	"editor_var s_volume"			"override shader volume level."
	"editor_var s_minDistance"		"override shader minDistance."
	"editor_var s_maxDistance"		"override shader maxDistance."
	"editor_var s_omni"				"force omnidirectional"
	"editor_var s_looping"			"force looping"
	"editor_var s_occlusion"		"force no portal occlusion"
	"editor_var s_global"			"force no falloff at all"
	"editor_var s_shakes"			"this entity can make the screen shake when the sound is loud."
	"editor_var wait"				"when set > 0, seconds between triggerings.  time between sounds is wait + or - random"
	"editor_var random"				"wait variance."
	
	"spawnclass"					"idSound"
}

entityDef info_location {
	"editor_color"			"1 1 0"
	"editor_mins"			"-4 -4 -4"
	"editor_maxs"			"4 4 4"

	"editor_usage"			"Place one of these in each door-separated area for naming the gameplay sections"
	"editor_var name"		"location name for HUD.  Cannot be the same as any other entity in the game."
 	"editor_var location"	"use this when you have two locations with the same name."

	"spawnclass"			"idLocationEntity"
}

entityDef info_locationSeparator {
	"editor_color"			"1 1 0"
	"editor_mins"			"-16 -16 -16"
	"editor_maxs"			"16 16 16"

	"editor_usage"			"Touch a vis-portal with this to break location name flood filling without using a door"

	"spawnclass"			"idLocationSeparatorEntity"
}

entityDef info_vacuum {
	"editor_color"			"1 1 0"
	"editor_mins"			"-4 -4 -4"
	"editor_maxs"			"4 4 4"

	"editor_usage"			"Place one of these in an outside area in each map for vacuum flooding"

	"spawnclass"			"idVacuumEntity"
}

entityDef info_vacuumSeparator {
	"editor_color"			"1 1 0"
	"editor_mins"			"-16 -16 -16"
	"editor_maxs"			"16 16 16"

	"editor_usage"			"Touch a vis-portal with this to break air/vacuum flood filling at windows.  Trigger it to allow vacuum to flood through."

	"spawnclass"			"idVacuumSeparatorEntity"
}

// RAVEN BEGIN
// abahr:
entityDef info_gravity {
	"editor_color"			"1 1 0"
	"editor_mins"			"-16 -16 -16"
	"editor_maxs"			"16 16 16"

	"editor_usage"			"Place one of these gravity flooding"
	"editor_var gravity"	"Gravity vector for this area"

	"spawnclass"			"rvGravityArea_Static"
	"gravity"				"0 0 -1066"
}

entityDef info_gravity_surfacenormal {
	"editor_color"			"1 1 0"
	"editor_mins"			"-16 -16 -16"
	"editor_maxs"			"16 16 16"

	"editor_usage"			"Place one of these gravity flooding"

	"spawnclass"			"rvGravityArea_SurfaceNormal"
}

entityDef info_gravitySeparator {
	"editor_color"			"1 1 0"
	"editor_mins"			"-16 -16 -16"
	"editor_maxs"			"16 16 16"

	"editor_usage"			"Touch a vis-portal with this to break air/vacuum flood filling at windows.  Trigger it to allow vacuum to flood through."

	"spawnclass"			"rvGravitySeparatorEntity"
}
// RAVEN END

entityDef text {
	"editor_color"			"1 1 0"
	"editor_mins"			"-4 -4 -4"
	"editor_maxs"			"4 4 4"
	"editor_showangle"				"1"
	"editor_rotatable"				"1"

	"editor_usage"			"Used to display debug text in a level"
	"editor_var text"		"text to print"
	"editor_var force"		"if set to 1 prints always otherwise only in developer mode"
	"editor_var playerOriented" "if set to 1 text always faces the player" 

	"spawnclass"			"idTextEntity"
}

/***********************************************************************

 raven additions

***********************************************************************/

entityDef bse_owner
{
	"spawnclass"			"rvBSEOwner"
}



/***********************************************************************

 tactical features

***********************************************************************/

entityDef info_tactical_feature {
	"editor_color"			"1 0 0"
	"editor_mins"			"-16 -16 0"
	"editor_maxs"			"16 16 72"
	"editor_showangle"		"1"
	
	"editor_usage"				"Touch a vis-portal with this to break air/vacuum flood filling at windows.  Trigger it to allow vacuum to flood through."

	"editor_var height"			"determines the height this feature will have, set lower to determine crouch heights"
	"editor_var cover"			"feature provides cover in direction of normal"
	"editor_var lean_left"		"can lean left standing only"
	"editor_var corner_left"	"can lean left crouched or standing"
	"editor_var lean_right"		"can lean right standing only"
	"editor_var corner_right"	"can lean right crouched or standing"
	"editor_var vantage"		"can see lots of areas (good for snipers)"
	"editor_var pinch"			"in a narrow area (a bottleneck)"

	"height"				"72"
	"cover"					"1"
	"lean_left"				"0"
	"corner_left"			"0"
	"lean_right"			"0"
	"corner_right"			"0"
	"vantage"				"0"
	"pinch"					"0"

	"spawnclass"			"idTarget"
}
















